/*
*
* PMlib - Performance Monitor library
*
* Copyright (c) 2010-2011 VCAD System Research Program, RIKEN.
* All rights reserved.
*
* Copyright (c) 2012-2015 Advanced Institute for Computational Science, RIKEN.
* All rights reserved.
*
*/


SOFTWARE REQUIREMENT
====================
- MPI library
- PAPI library (option)


HOW TO COMPILE
==============

1) with configure

$ export FFV_HOME=hogehoge
$ cd BUILD_DIR
$ ../configure [options]
$ make
$ make install


Configure options:

--host=hostname
   Specify in case of cross-compilation.

--prefix=INSTALL_DIR
   Install directory path.  If omitted, default is /usr/local/PMlib.

--with-comp=(INTEL|FJ|GNU)
   If Intel compiler is used, choose INTEL, and if Fujitsu compiler, specify FJ.
   This option is mandatory when using both compilers.

--with-example=(no|yes)
   Turn on to build examples. Default setting is 'no'.

--with-impi=IntelMPI_DIR
   If you use an IntelMPI library, specify this option and use wrapper compiler driver.
   If you exploit to use mpiifort for FC or F90, configure script recognizes that you
   specified this option.

--with-mpich=MPICH_DIR
   If you will use a MPICH library, specify the directory that MPICH library is
   installed. Either --with-mpich of --with-ompi option will be required except.
   If the wrapper compiler, e.g., mpic++ or mpicxx is used to compile, both options
   can be eliminated.

--with-ompi=OPENMPI_DIR
   If the OpenMPI library is used, specify the directory path that OpenMPI library is
   installed. This option will be required to use a native compiler. Instead, if the
   wrapper compiler, e.g., mpicxx, is used to compile, this options can be eliminated.

--with-papi=PAPI_DIR or yes
   If you want to use the PAPI library, specify the directory where the library is installed.
   In the case of compilation on K front-end, sprcifiy the directory. Use 'yes' for when you
   compile on compute nodes.


CXX=CXX_COMPILER
   Specify a C++ compiler, e.g., g++, icpc, xlc++ or others.

CXXFLAGS=CXX_OPTIONS
   Specify compiler options.

F90=FORTRAN90_COMPILER
   Specify a fortran90 compiler.

F90FLAGS=FORTRAN90_OPTIONS
   Specify compiler options.



Here is examples.

===
## INTEL COMPILER

# Using a wrapper compiler /w example

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --with-comp=INTEL \
               --with-example=yes \
               CXX=mpicxx \
               CXXFLAGS="-O3 -openmp" \
               CC=mpicc \
               CFLAGS="-O3 -openmp" \
               F90=mpif90 \
               F90FLAGS="-fpp -O3 -openmp"


# Using a wrapper compiler with PAPI, examples

$ ../configure CXX=mpicxx \
               CXXFLAGS="-O3 -openmp" \
               CC=mpicc \
               CFLAGS="-O3 -openmp" \
               F90=mpif90 \
               F90FLAGS="-fpp -O3 -openmp" \
               --with-comp=INTEL \
               --with-papi=/usr/local/papi/papi-5.2.0/intel \
               --with-example=yes


# Using a wrapper compiler, intel MPI, with PAPI, examples

$ ../configure CXX=mpicxx \
               CXXFLAGS="-O3 -openmp" \
               CC=mpicc \
               CFLAGS="-O3 -openmp" \
               F90=mpif90 \
               F90FLAGS="-fpp -O3 -openmp" \
               --with-impi \
               --with-comp=INTEL \
               --with-papi=/usr/local/papi/papi-5.2.0/intel \
               --with-example=yes


# for serial /w example

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --with-comp=INTEL \
               --with-example=yes \
               CXX=icpc \
               CXXFLAGS="-O3 -openmp" \
               CC=icc \
               CFLAGS="-O3 -openmp" \
               F90=ifort \
               F90FLAGS="-fpp -O3 -openmp"


# for serial /w example /wo openmp

$ ../configure --prefix=/usr/local/PMlib \
              --with-comp=INTEL \
              --with-example=yes \
              CXX=icpc \
              CXXFLAGS="-O3" \
              CC=icc \
              CFLAGS="-O3" \
              F90=ifort \
              F90FLAGS="-fpp -O3"


# Specify install directory, mpi library and compiler, alternattion /w MPI build

$ ../configure --prefix=${FFV_HOME}/PMlib
               --with-comp=INTEL \
               --with-ompi=/opt/openmpi \
               CXX=icpc \
               CXXFLAGS="-O3 -openmp" \
               CC=icc \
               CFLAGS="-O3 -openmp" \
               F90=ifort \
               F90FLAGS="-fpp -O3 -openmp"

===
## GNU compiler

# serial version

$ ../configure --prefix=${FFV_HOME}PMlib \
               CXX=g++ \
               CXXFLAGS="-O3 -fopenmp" \
               CC=gcc \
               CFLAGS="-O3 -fopenmp" \
               F90=gfortran \
               F90FLAGS="-cpp -O3 -fopenmp --free-line-length-none"


# Using a wrapper compiler /w example

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --with-comp=GNU \
               --with-example=yes \
               CXX=mpicxx \
               CXXFLAGS="-O3 -fopenmp" \
               CC=mpicc \
               CFLAGS="-O3 -fopenmp" \
               F90=mpif90 \
               F90FLAGS="-cpp -O3 -fopenmp --free-line-length-none"

===
## FUJITSU

# FX, K computer, compilation on compute nodes

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --with-papi=yes \
               --with-example=yes \
               CC=mpifcc \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCC \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"


# FX, K computer, compilation on login nodes

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --host=sparc64-unknown-linux-gnu \
               --with-papi=/opt/FJSVXosDevkit/sparc64fx/V01L02E07 \
               --with-example=yes \
               CC=mpifccpx \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCCpx \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"


# FX, K computer, Serial, compilation on login nodes

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --host=sparc64-unknown-linux-gnu \
               --with-papi=/opt/FJSVXosDevkit/sparc64fx/V01L02E07 \
               --with-example=yes \
               -D_PM_WITHOUT_MPI_ \
               CC=mpifccpx \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCCpx \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"

If you try to install process again, execute 'make distclean' then configure.



2) Hand compile

Edit environmental variables in a Makefile_hand file for a target machine. Then, 'make'.
A compiled module libPM.a will be placed in $(PM_DIR)/lib/ directory.


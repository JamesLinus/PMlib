/*
*
* PMlib - Performance Monitor library
*
* Copyright (c) 2010-2011 VCAD System Research Program, RIKEN.
* All rights reserved.
*
* Copyright (c) 2012-2015 Advanced Institute for Computational Science, RIKEN.
* All rights reserved.
*
*/


SOFTWARE REQUIREMENT
====================
- MPI library
- PAPI library (option)


HOW TO COMPILE
==============

1) with configure

$ export FFV_HOME=hogehoge
$ cd BUILD_DIR
$ ../configure [options]
$ make
$ make install


Configure options:

--host=hostname
   Specify in case of cross-compilation.

--prefix=INSTALL_DIR
   Install directory path.  If omitted, default is /usr/local/PMlib.

--with-example=(no|yes)
   Turn on to build examples. Default setting is 'no'.

--with-ompi=OPENMPI_DIR
   If the OpenMPI library is used, specify the directory path that OpenMPI library is
   installed. This option will be required to use a native compiler. Instead, if the
   wrapper compiler, e.g., mpicxx, is used to compile, this options can be eliminated.

--with-papi=PAPI_DIR or yes
   If you want to use the PAPI library, specify the directory where the library is installed.
   In the case of compilation on K front-end, sprcifiy the directory. Use 'yes' for when you
   compile on compute nodes.

CXX=CXX_COMPILER
   Specify a C++ compiler, e.g., g++, icpc, xlc++ or others.

CXXFLAGS=CXX_OPTIONS
   Specify compiler options.



Here is examples.

# Using GNU compiler, serial version

$ ../configure --prefix=${FFV_HOME}PMlib CXX=g++ CXXFLAGS="-O3 -fopenmp"


# Specify install directory, mpi library and compiler

$ ../configure --prefix=${FFV_HOME}/PMlib --with-ompi=/opt/openmpi CXX=icpc CXXFLAGS="-O3 -openmp"


# Using a wrapper compiler (Intel)

$ ../configure --prefix=${FFV_HOME}/PMlib CXX=mpicxx CXXFLAGS="-O3 -openmp" CC=mpicc CFLAGS="-O3 -openmp"


# Using a wrapper compiler (Intel) with PAPI, examples

$ ../configure CXX=mpicxx \
               CXXFLAGS="-O3 -openmp" \
               CC=mpicc \
               CFLAGS="-O3 -openmp" \
               --with-papi=/usr/local/papi/papi-5.2.0/intel \
               --with-example=yes


# Using a wrapper compiler (GNU) with default install directory

$ ../configure CXX=mpicxx CXXFLAGS="-O3 -fopenmp"



# FX, K computer, compilation on compute nodes

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --with-papi=yes \
               --with-example=yes \
               CC=mpifcc \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCC \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"



# FX, K computer, compilation on login nodes

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --host=sparc64-unknown-linux-gnu \
               --with-papi=/opt/FJSVXosDevkit/sparc64fx/V01L02E07 \
               --with-example=yes \
               CC=mpifccpx \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCCpx \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"


# FX, K computer, Serial, compilation on login nodes

$ ../configure --prefix=${FFV_HOME}/PMlib \
               --host=sparc64-unknown-linux-gnu \
               --with-papi=/opt/FJSVXosDevkit/sparc64fx/V01L02E07 \
               --with-example=yes \
               -D_PM_WITHOUT_MPI_ \
               CC=mpifccpx \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCCpx \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"

If you try to install process again, execute 'make distclean' then configure.



2) Hand compile

Edit environmental variables in a Makefile_hand file for a target machine. Then, 'make'.
A compiled module libPM.a will be placed in $(PM_DIR)/lib/ directory.


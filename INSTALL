/*
*
* PMlib - Performance Monitor library
*
* Copyright (c) 2010-2011 VCAD System Research Program, RIKEN.
* All rights reserved.
*
* Copyright (c) 2012-2015 Advanced Institute for Computational Science, RIKEN.
* All rights reserved.
*
*/


SOFTWARE REQUIREMENT
====================
- MPI library
- PAPI library (option)
- OTF library (option)


HOW TO COMPILE
==============

1) with configure

$ export FFV_HOME=hogehoge
$ cd BUILD_DIR
$ ../configure [options]
$ make
$ sudo make install


Configure options:

--host=hostname
   Specify in case of cross-compilation.

--prefix=INSTALL_DIR
   Install directory path.  If omitted, default is /usr/local/PMlib.

--with-comp=(INTEL|FJ|GNU)
   If Intel compiler is used, choose INTEL, and if Fujitsu compiler, specify FJ.
   This option is mandatory when using these compilers.

--with-example=(no|yes)
   Set 'yes' to build example programs. Default setting is 'no'.

--with-impi=IntelMPI_DIR
   If you use IntelMPI library, specify this option with IntelMPI_DIR value
   pointing to the IntelMPI library installed directory.
   This option is required only when using native compilers.
   If you use MPI wrapper compiler for CXX, CC, F90, the MPI library is
   automatically detected, and this options can be omitted.

--with-mpich=MPICH_DIR
   If you use MPICH library, specify this option with MPICH_DIR value
   pointing to the MPICH library installed directory.
   This option is required only when using native compilers.
   If you use MPI wrapper compiler for CXX, CC, F90, the MPI library is
   automatically detected, and this options can be omitted.

--with-ompi=OPENMPI_DIR
   If you use OpenMPI library, specify this option with OPENMPI_DIR value
   pointing to the OpenMPI library installed directory.
   This option is required only when using native compilers.
   If you use MPI wrapper compiler for CXX, CC, F90, the MPI library is
   automatically detected, and this options can be omitted.

--with-papi=PAPI_DIR or --with-papi=yes
   If you use PAPI library, specify this option with PAPI_DIR value
   pointing to the PAPI library installed directory.
   On K computer compute node, use --with-papi=yes form. K computer has
   different paths between front-end nodes and compute nodes, and PMlib
   configure script automatically detects the path on compute nodes.

--with-otf=OTF_DIR
   If you use OTF library, specify this option with OTF_DIR value
   pointing to the OTF library installed directory.


CXX=CXX_COMPILER
   Specify a native C++ compiler, e.g., g++, icpc, c++ or MPI wrapper
   compiler, e.g. mpicxx.

CXXFLAGS=CXX_OPTIONS
   Specify compiler options.

CC=CC_COMPILER
   Specify a native C compiler, e.g., gcc, icc, clang or MPI wrapper
   compiler, e.g. mpicc.

CFLAGS=CC_OPTIONS
   Specify compiler options.

F90=FORTRAN90_COMPILER
   Specify a native fortran90 compiler, e.g., gfortran, ifort, or MPI wrapper
   compiler, e.g. mpif90.

F90FLAGS=FORTRAN90_OPTIONS
   Specify compiler options.



2) Configure Examples

# INTEL compiler

## Serial version

### minimum options for a quick check
$ ../configure --with-comp=INTEL \
               CXX=icpc \
               CC=icc \
               F90=ifort \
               F90FLAGS="-fpp"

### useful basic options with example, openmp, installation directory
$ ../configure --with-comp=INTEL \
               --with-example=yes \
               --prefix=${FFV_HOME}/PMlib \
               CXX=icpc \
               CXXFLAGS="-O3 -openmp" \
               CC=icc \
               CFLAGS="-O3 -openmp" \
               F90=ifort \
               F90FLAGS="-fpp -O3 -openmp"

## MPI version using wrapper commands (mpicxx, mpicc, mpif90)

### useful basic options with example, Intel MPI, openmp, installation directory
$ ../configure --with-comp=INTEL \
               --with-example=yes \
               --prefix=${FFV_HOME}/PMlib \
               --with-impi \
               CXX=mpicxx \
               CXXFLAGS="-O3 -openmp" \
               CC=mpicc \
               CFLAGS="-O3 -openmp" \
               F90=mpif90 \
               F90FLAGS="-fpp -O3 -openmp" 

### with PAPI/HWPC library
$ ../configure --with-comp=INTEL \
               --with-example=yes \
               --with-papi=/usr/local/papi/papi-5.2.0/intel \
               --with-impi \
               CXX=mpicxx \
               CXXFLAGS="-O3 -openmp" \
               CC=mpicc \
               CFLAGS="-O3 -openmp" \
               F90=mpif90 \
               F90FLAGS="-fpp -O3 -openmp" 


### native compilers, Link OpenMPI instead of Intel MPI, with PAPI/HWPC
$ ../configure --with-comp=INTEL \
               --with-example=yes \
               --with-papi=/usr/local/papi/papi-5.2.0/intel \
               --with-ompi=/opt/openmpi \
               CXX=icpc \
               CXXFLAGS="-O3 -openmp" \
               CC=icc \
               CFLAGS="-O3 -openmp" \
               F90=ifort \
               F90FLAGS="-fpp -O3 -openmp"



# GNU compiler

## Serial version

### useful basic options with example, openmp
$ ../configure --with-comp=GNU \
               --with-example=yes \
               CXX=g++ \
               CXXFLAGS="-O3 -fopenmp" \
               CC=gcc \
               CFLAGS="-O3 -fopenmp" \
               F90=gfortran \
               F90FLAGS="-cpp -O3 -fopenmp --free-line-length-none"

## MPI version using wrapper commands (mpicxx, mpicc, mpif90)

### useful basic options with example, Intel MPI, openmp, installation directory
$ ../configure --with-comp=GNU \
               --with-example=yes \
               CXX=mpicxx \
               CXXFLAGS="-O3 -fopenmp" \
               CC=mpicc \
               CFLAGS="-O3 -fopenmp" \
               F90=mpif90 \
               F90FLAGS="-cpp -O3 -fopenmp --free-line-length-none"



# FUJITSU compiler / FX, K computer

## Serial version

### Compilation on login nodes
$ ../configure --prefix=${FFV_HOME}/PMlib \
               --host=sparc64-unknown-linux-gnu \
               --with-papi=/opt/FJSVXosDevkit/sparc64fx/V01L02E07 \
               --with-example=yes \
               -D_PM_WITHOUT_MPI_ \
               CC=mpifccpx \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCCpx \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"


## MPI version

### Compilation on compute nodes
$ ../configure --prefix=${FFV_HOME}/PMlib \
               --with-papi=yes \
               --with-example=yes \
               CC=mpifcc \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCC \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"

### Compilation on login nodes
$ ../configure --prefix=${FFV_HOME}/PMlib \
               --host=sparc64-unknown-linux-gnu \
               --with-papi=/opt/FJSVXosDevkit/sparc64fx/V01L02E07 \
               --with-example=yes \
               CC=mpifccpx \
               CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
               CXX=mpiFCCpx \
               CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"



# Apple Mac OSX LLVM/clang compiler
				note :PAPI/HWPC is not supported on Apple Mac OSX.

## Serial version

###  minimum options. note: c++ points to clang++, cc points to clang
$ ../configure --with-papi=none \
               --with-example=yes \
               CXX=c++ \
               CXXFLAGS="" \
               CC=cc  \
               CFLAGS=""  \
               FC=gfortran \
               FCFLAGS="-cpp"


## MPI version (OpenMPI wrapper)
$ ../configure --with-example=yes \
               --with-ompi=/opt/openmpi \
               CXX=mpicxx \
               CXXFLAGS="" \
               CC=mpicc  \
               CFLAGS=""  \
               FC=mpifort \
               FCFLAGS="-cpp"


If you try to install process again, execute 'make distclean' then configure.



3) Hand compile

Edit environmental variables in a Makefile_hand file for a target machine. Then, 'make'.
A compiled module libPM.a will be placed in $(PM_DIR)/lib/ directory.


RUN TIME ENVIRONMENT VARIABLES
==============================
When running applications linked with PMlib, the following
environment variables can be set to the shell.

HWPC_CHOOSER=(FLOPS|BANDWIDTH|VECTOR|CACHE|CYCLE)
  If this environment variable is set, PMlib automatically detects
  the PAPI based hardware counters.
  If this environment variable is not set, the HWPC counters are not reported.

OTF_TRACING=(off|on|full)
  If this environment variable is set, PMlib automatically generates
  the Open Trace Format files for post processing.
  There will be three type of OTF files.
  ${OTF_TRACING}.otf
  ${OTF_TRACING}.0.def
  ${OTF_TRACING}.(1|2|..|N).events
  See the next environment variable OTF_FILENAME.
  If the value is "off" or not defined, the OTF files are not produced.
  If the value is "on", the OTF files will contain the timer information only.
  If the value is "full", the OTF files will contain the counter information
  as well as the timer information.
  Remark that OTF_TRACING=full may yield the heavy overhead, if the measuring
  sections are repeated many times.

OTF_FILENAME="some file name"
  The value of ${OTF_FILENAME} is used to prefix the OTF file names if the
  value of previous ${OTF_TRACING} has been set to "on" or "full".
  If this environment variable is not set, the default value of
  "pmlib_optional_otf_files" is used to prefix the OTF file names.

